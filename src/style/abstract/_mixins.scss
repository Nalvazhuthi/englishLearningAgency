@use "../abstract/variables" as *; // adjust path as needed

// Flexbox
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-space-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

// Responsive breakpoints
@mixin respond($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: 576px) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: 768px) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: 992px) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: 1200px) {
      @content;
    }
  }
}

// Ellipsis
@mixin text-ellipsis($lines: 1) {
  overflow: hidden;
  text-overflow: ellipsis;
  @if $lines == 1 {
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

// Button reset
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

@mixin primary-button {
  border-radius: 100px;
  padding: 6px 32px;
  background-color: $highlight;
  color: #fff;
  cursor: pointer;
}

@mixin secondary-button {
  border-radius: 100px;
  padding: 6px 32px;
  border: 1px solid $highlight;
  color: $highlight;
  cursor: pointer;
}

// Transition
@mixin smooth-transition($props: all, $duration: 0.3s, $easing: ease-in-out) {
  transition: $props $duration $easing;
}

@mixin appear {
  from {
    opacity: 0;
    transform: translateY(100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}


@keyframes appearAnimation {
  @include appear;
}
